<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.javaboy.vhr.mapper.EmployeeremoveMapper" >
  <resultMap id="BaseResultMap" type="org.javaboy.vhr.bean.Employeeremove" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="eid" property="eid" jdbcType="INTEGER" />
    <result column="afterDepId" property="afterdepid" jdbcType="INTEGER" />
    <result column="afterJobId" property="afterjobid" jdbcType="INTEGER" />
    <result column="removeDate" property="removedate" jdbcType="DATE" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="AllEmployeemvInfo" type="org.javaboy.vhr.bean.Employeeremove" extends="BaseResultMap">
    <association property="employeeNameDto" javaType="org.javaboy.vhr.bean.EmployeeNameDto">
      <id column="eid" property="id"/>
      <result column="name" property="name"/>
    </association>
    <association property="departmentDto" javaType="org.javaboy.vhr.bean.DepartmentDto">
      <id column="afterDepId" property="id"/>
      <result column="depName" property="depName"/>
    </association>
    <association property="positionDto" javaType="org.javaboy.vhr.bean.PositionDto">
      <id column="afterJobId" property="id"/>
      <result column="posName" property="posName"/>
    </association>
  </resultMap>
  <sql id="Base_Column_List" >
    id, eid, afterDepId, afterJobId, removeDate, reason, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employeeremove
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getEmployeemvByPage" resultMap="AllEmployeemvInfo">
    select em.*,e.name,d.name as depName,p.name as posName
     from  employeeremove em,department d, position p,employee e
      where e.id = em.eid and em.afterDepId = d.id and em.afterJobId = p.id
    <if test="empMv.employeeNameDto!=null">
      <if test="empMv.employeeNameDto.name != null and empMv.employeeNameDto.name != ''">
        and e.name like concat('%',#{empMv.employeeNameDto.name},'%')
      </if>
    </if>
    <if test="page != null and size != null">
      limit #{page},#{size}
    </if>
  </select>
  <select id="getTotal" resultType="java.lang.Long">
    select count(1)
    from  employeeremove em,department d, position p,employee e
    where e.id = em.eid and em.afterDepId = d.id and em.afterJobId = p.id
    <if test="empMv.employeeNameDto!=null">
      <if test="empMv.employeeNameDto.name != null and empMv.employeeNameDto.name != ''">
        and e.name like concat('%',#{empMv.employeeNameDto.name},'%')
      </if>
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employeeremove
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.javaboy.vhr.bean.Employeeremove" >
    insert into employeeremove (id, eid, afterDepId, 
      afterJobId, removeDate, reason, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{eid,jdbcType=INTEGER}, #{afterdepid,jdbcType=INTEGER}, 
      #{afterjobid,jdbcType=INTEGER}, #{removedate,jdbcType=DATE}, #{reason,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.javaboy.vhr.bean.Employeeremove" >
    insert into employeeremove
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="eid != null" >
        eid,
      </if>
      <if test="afterdepid != null" >
        afterDepId,
      </if>
      <if test="afterjobid != null" >
        afterJobId,
      </if>
      <if test="removedate != null" >
        removeDate,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="eid != null" >
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="afterdepid != null" >
        #{afterdepid,jdbcType=INTEGER},
      </if>
      <if test="afterjobid != null" >
        #{afterjobid,jdbcType=INTEGER},
      </if>
      <if test="removedate != null" >
        #{removedate,jdbcType=DATE},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.javaboy.vhr.bean.Employeeremove" >
    update employeeremove
    <set >
      <if test="eid != null" >
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="afterdepid != null" >
        afterDepId = #{afterdepid,jdbcType=INTEGER},
      </if>
      <if test="afterjobid != null" >
        afterJobId = #{afterjobid,jdbcType=INTEGER},
      </if>
      <if test="removedate != null" >
        removeDate = #{removedate,jdbcType=DATE},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.javaboy.vhr.bean.Employeeremove" >
    update employeeremove
    set eid = #{eid,jdbcType=INTEGER},
      afterDepId = #{afterdepid,jdbcType=INTEGER},
      afterJobId = #{afterjobid,jdbcType=INTEGER},
      removeDate = #{removedate,jdbcType=DATE},
      reason = #{reason,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>